# Create the Production Namespace (if not exist)

#kind: Namespace
#apiVersion: v1
#metadata:
#  name: production
#  labels:
#    name: production

#---

# Create a Persistent Volume mapped to a local directory
kind: PersistentVolume
apiVersion: v1
metadata:
  name: cannalogs-pv-volume1
  namespace: production
  labels:
    type: local
spec:
  storageClassName: generic
  capacity:
    storage: 5Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/kubernetes/CannaLogs"

---

# Create a Persistent Volume mapped to a local directory
kind: PersistentVolume
apiVersion: v1
metadata:
  name: cannalogs-pv-volume2
  namespace: production
  labels:
    type: local
spec:
  storageClassName: generic
  capacity:
    storage: 5Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/kubernetes/CannaLogsPhotos"

---

# Create a Persistent Volume Claim for the pod to access the directory
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: cannalogs-pv-claim1
  namespace: production
spec:
  storageClassName: generic
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Mi

---

# Create a Persistent Volume Claim for the pod to access the directory
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: cannalogs-pv-claim2
  namespace: production
spec:
  storageClassName: generic
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Mi

---

# Create the App Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cannalogs-deployment
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cannalogs
  template:
    metadata:
      labels:
        app: cannalogs
    spec:
    # Specify the container
      containers:
        - name: cannalogs
          image: prengineer/cannalogs:latest
          env:
            - name: TZ
              value: America/New_York
          resources:
            limits:
              memory: "500Mi"
              cpu: "1000m"
          ports:
            - name: httpport
              containerPort: 80
          # Add the volumes
          volumeMounts:
          - mountPath: "/config"
            name: cannalogs-pv-storage1
          - mountPath: "/app/photos"
            name: cannalogs-pv-storage2
      # Specify the volumes
      volumes:
      - name: cannalogs-pv-storage1
        persistentVolumeClaim:
          claimName: cannalogs-pv-claim1
      - name: cannalogs-pv-storage2
        persistentVolumeClaim:
          claimName: cannalogs-pv-claim2

---

# Create the Exposed App Service

apiVersion: v1
kind: Service
metadata:
  name: cannalogs-external-service
  namespace: production
spec:
  selector:
    app: cannalogs
  type: LoadBalancer
  ports:
  - name: httpport
    protocol: TCP
    port: 8004
    targetPort: 80
status:
  loadBalancer:
    ingress:
    - ip: 10.0.0.80